/* tslint:disable */
/* eslint-disable */
/**
 * Terinla
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
    UserToJSONTyped,
} from './User';

/**
 * 
 * @export
 * @interface Book
 */
export interface Book {
    /**
     * 
     * @type {number}
     * @memberof Book
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof Book
     */
    title?: string | null;
    /**
     * 
     * @type {User}
     * @memberof Book
     */
    currentHolder?: User;
    /**
     * 
     * @type {Array<User>}
     * @memberof Book
     */
    waitList?: Array<User> | null;
    /**
     * 
     * @type {Date}
     * @memberof Book
     */
    lastBorrow?: Date;
    /**
     * 
     * @type {string}
     * @memberof Book
     */
    category?: string | null;
}

/**
 * Check if a given object implements the Book interface.
 */
export function instanceOfBook(value: object): value is Book {
    return true;
}

export function BookFromJSON(json: any): Book {
    return BookFromJSONTyped(json, false);
}

export function BookFromJSONTyped(json: any, ignoreDiscriminator: boolean): Book {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'title': json['title'] == null ? undefined : json['title'],
        'currentHolder': json['currentHolder'] == null ? undefined : UserFromJSON(json['currentHolder']),
        'waitList': json['waitList'] == null ? undefined : ((json['waitList'] as Array<any>).map(UserFromJSON)),
        'lastBorrow': json['lastBorrow'] == null ? undefined : (new Date(json['lastBorrow'])),
        'category': json['category'] == null ? undefined : json['category'],
    };
}

export function BookToJSON(json: any): Book {
    return BookToJSONTyped(json, false);
}

export function BookToJSONTyped(value?: Book | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'title': value['title'],
        'currentHolder': UserToJSON(value['currentHolder']),
        'waitList': value['waitList'] == null ? undefined : ((value['waitList'] as Array<any>).map(UserToJSON)),
        'lastBorrow': value['lastBorrow'] == null ? undefined : ((value['lastBorrow']).toISOString()),
        'category': value['category'],
    };
}

